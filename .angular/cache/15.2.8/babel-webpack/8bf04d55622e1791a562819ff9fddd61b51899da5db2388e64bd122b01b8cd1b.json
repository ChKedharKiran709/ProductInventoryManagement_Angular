{"ast":null,"code":"// import { Component } from '@angular/core';\n// import { AuthService } from '../../../core/auth.service';\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-register',\n//   templateUrl: './register.component.html',\n//   styleUrls: ['./register.component.css']\n// })\n// export class RegisterComponent {\n//   constructor(private authService: AuthService) { }\n//   onRegister(form: any): void {\n//     if (form.valid) {\n//       this.authService.register(form.value).subscribe(() => {\n//         alert('Registration successful!');\n//       });\n//     } else {\n//       alert('Please fill out all required fields.');\n//     }\n//   }\n// }\nimport { Component } from '@angular/core';\nlet RegisterComponent = class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  onRegister(form) {\n    if (form.valid) {\n      const email = form.value.email;\n      this.authService.checkUserExists(email).subscribe(exists => {\n        if (exists) {\n          alert('Email already exists! Please use a different email.');\n        } else {\n          this.authService.register(form.value).subscribe(() => {\n            alert('Registration successful!');\n            form.reset();\n          });\n        }\n      });\n    } else {\n      alert('Please fill out all required fields.');\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,UAAU,CAACC,IAAS;IAClB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACD,KAAK;MAE9B,IAAI,CAACJ,WAAW,CAACM,eAAe,CAACF,KAAK,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;QACzD,IAAIA,MAAM,EAAE;UACVC,KAAK,CAAC,qDAAqD,CAAC;SAC7D,MAAM;UACL,IAAI,CAACT,WAAW,CAACU,QAAQ,CAACR,IAAI,CAACG,KAAK,CAAC,CAACE,SAAS,CAAC,MAAK;YACnDE,KAAK,CAAC,0BAA0B,CAAC;YACjCP,IAAI,CAACS,KAAK,EAAE;UACd,CAAC,CAAC;;MAEN,CAAC,CAAC;KACH,MAAM;MACLF,KAAK,CAAC,sCAAsC,CAAC;;EAEjD;CACD;AArBYX,iBAAiB,eAL7BD,SAAS,CAAC;EACTe,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWhB,iBAAiB,CAqB7B;SArBYA,iBAAiB","names":["Component","RegisterComponent","constructor","authService","onRegister","form","valid","email","value","checkUserExists","subscribe","exists","alert","register","reset","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\kedhar\\OneDrive\\Desktop\\wipro learning materials\\Phase-2 material\\Angular-Product-Inventory-Management-Solution-main\\src\\app\\features\\auth\\register\\register.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { AuthService } from '../../../core/auth.service';\n\n// @Component({\n//   selector: 'app-register',\n//   templateUrl: './register.component.html',\n//   styleUrls: ['./register.component.css']\n// })\n// export class RegisterComponent {\n//   constructor(private authService: AuthService) { }\n\n//   onRegister(form: any): void {\n//     if (form.valid) {\n//       this.authService.register(form.value).subscribe(() => {\n//         alert('Registration successful!');\n//       });\n//     } else {\n//       alert('Please fill out all required fields.');\n//     }\n//   }\n// }\nimport { Component } from '@angular/core';\nimport { AuthService } from '../../../core/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  constructor(private authService: AuthService) { }\n\n  onRegister(form: any): void {\n    if (form.valid) {\n      const email = form.value.email;\n\n      this.authService.checkUserExists(email).subscribe(exists => {\n        if (exists) {\n          alert('Email already exists! Please use a different email.');\n        } else {\n          this.authService.register(form.value).subscribe(() => {\n            alert('Registration successful!');\n            form.reset();\n          });\n        }\n      });\n    } else {\n      alert('Please fill out all required fields.');\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}